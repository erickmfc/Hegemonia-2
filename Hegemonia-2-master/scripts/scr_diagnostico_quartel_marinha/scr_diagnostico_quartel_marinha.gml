// ===============================================
// HEGEMONIA GLOBAL - DIAGN√ìSTICO QUARTEL MARINHA
// Script para testar e diagnosticar problemas do menu
// ===============================================

/// @description Diagn√≥stico completo do quartel de marinha
function scr_diagnostico_quartel_marinha() {
    show_debug_message("=== DIAGN√ìSTICO QUARTEL DE MARINHA ===");
    
    // === TESTE 1: VERIFICAR OBJETOS ===
    show_debug_message("=== TESTE 1: VERIFICA√á√ÉO DE OBJETOS ===");
    
    if (object_exists(obj_quartel_marinha)) {
        show_debug_message("‚úÖ obj_quartel_marinha existe");
    } else {
        show_debug_message("‚ùå obj_quartel_marinha N√ÉO existe");
        return;
    }
    
    if (object_exists(obj_menu_recrutamento_marinha)) {
        show_debug_message("‚úÖ obj_menu_recrutamento_marinha existe");
    } else {
        show_debug_message("‚ùå obj_menu_recrutamento_marinha N√ÉO existe");
        return;
    }
    
    // === TESTE 2: VERIFICAR LAYERS ===
    show_debug_message("=== TESTE 2: VERIFICA√á√ÉO DE LAYERS ===");
    
    var _room = room_get_name(room);
    show_debug_message("Sala atual: " + _room);
    
    // Verificar se a layer Instances existe
    var _layer_exists = layer_exists("Instances");
    if (_layer_exists) {
        show_debug_message("‚úÖ Layer 'Instances' existe");
    } else {
        show_debug_message("‚ùå Layer 'Instances' N√ÉO existe");
        show_debug_message("   Tentando criar layer 'Instances'...");
        
        // Tentar criar a layer
        var _layer_id = layer_create(0, "Instances");
        if (_layer_id != -1) {
            show_debug_message("‚úÖ Layer 'Instances' criada com sucesso");
        } else {
            show_debug_message("‚ùå Falha ao criar layer 'Instances'");
        }
    }
    
    // === TESTE 3: VERIFICAR QUART√âIS EXISTENTES ===
    show_debug_message("=== TESTE 3: QUART√âIS EXISTENTES ===");
    
    var _quartel_count = instance_number(obj_quartel_marinha);
    show_debug_message("Quart√©is de marinha na sala: " + string(_quartel_count));
    
    if (_quartel_count > 0) {
        with (obj_quartel_marinha) {
            show_debug_message("Quartel ID: " + string(id) + " | Posi√ß√£o: (" + string(x) + ", " + string(y) + ")");
            show_debug_message("  Selecionado: " + string(selecionado));
            show_debug_message("  Menu recrutamento: " + string(menu_recrutamento));
        }
    } else {
        show_debug_message("‚ö†Ô∏è Nenhum quartel de marinha encontrado na sala");
        show_debug_message("   Criando quartel de teste...");
        
        var _test_quartel = instance_create_layer(200, 200, "rm_mapa_principal", obj_quartel_marinha);
        if (instance_exists(_test_quartel)) {
            show_debug_message("‚úÖ Quartel de teste criado: " + string(_test_quartel));
        } else {
            show_debug_message("‚ùå Falha ao criar quartel de teste");
        }
    }
    
    // === TESTE 4: VERIFICAR SISTEMA DE CLIQUE ===
    show_debug_message("=== TESTE 4: SISTEMA DE CLIQUE ===");
    
    var _mouse_x = mouse_x;
    var _mouse_y = mouse_y;
    show_debug_message("Posi√ß√£o do mouse: (" + string(_mouse_x) + ", " + string(_mouse_y) + ")");
    
    // Verificar se h√° quartel na posi√ß√£o do mouse
    var _quartel_sob_mouse = instance_position(_mouse_x, _mouse_y, obj_quartel_marinha);
    if (_quartel_sob_mouse != noone) {
        show_debug_message("‚úÖ Quartel encontrado sob o mouse: " + string(_quartel_sob_mouse));
    } else {
        show_debug_message("‚ö†Ô∏è Nenhum quartel encontrado sob o mouse");
    }
    
    // === TESTE 5: TESTAR CRIA√á√ÉO DO MENU ===
    show_debug_message("=== TESTE 5: CRIA√á√ÉO DO MENU ===");
    
    var _test_menu = instance_create_layer(0, 0, "Instances", obj_menu_recrutamento_marinha);
    if (instance_exists(_test_menu)) {
        show_debug_message("‚úÖ Menu de teste criado com sucesso: " + string(_test_menu));
        show_debug_message("   Posi√ß√£o do menu: (" + string(_test_menu.x) + ", " + string(_test_menu.y) + ")");
        
        // Destruir menu de teste
        instance_destroy(_test_menu);
        show_debug_message("‚úÖ Menu de teste destru√≠do");
    } else {
        show_debug_message("‚ùå Falha ao criar menu de teste");
    }
    
    // === TESTE 6: VERIFICAR CONFLITOS ===
    show_debug_message("=== TESTE 6: VERIFICA√á√ÉO DE CONFLITOS ===");
    
    // Verificar se h√° outros objetos interceptando cliques
    var _all_objects = instance_position(_mouse_x, _mouse_y, all);
    if (_all_objects != noone) {
        show_debug_message("Objetos na posi√ß√£o do mouse:");
        with (_all_objects) {
            show_debug_message("  - " + object_get_name(object_index) + " (ID: " + string(id) + ")");
        }
    } else {
        show_debug_message("Nenhum objeto na posi√ß√£o do mouse");
    }
    
    show_debug_message("=== DIAGN√ìSTICO CONCLU√çDO ===");
    show_debug_message("üí° DICAS:");
    show_debug_message("1. Clique no quartel de marinha e observe o console");
    show_debug_message("2. Verifique se aparecem mensagens de debug");
    show_debug_message("3. Se n√£o aparecer nada, h√° problema no sistema de clique");
    show_debug_message("4. Se aparecer mensagens mas n√£o menu, h√° problema na cria√ß√£o");
}

/// @description Teste r√°pido do sistema de clique
function scr_teste_clique_quartel() {
    show_debug_message("=== TESTE R√ÅPIDO DE CLIQUE ===");
    
    var _mouse_x = mouse_x;
    var _mouse_y = mouse_y;
    
    show_debug_message("Mouse X: " + string(_mouse_x) + " | Mouse Y: " + string(_mouse_y));
    
    // Verificar se h√° quartel na posi√ß√£o
    var _quartel = instance_position(_mouse_x, _mouse_y, obj_quartel_marinha);
    if (_quartel != noone) {
        show_debug_message("‚úÖ Quartel encontrado: " + string(_quartel));
        
        // Simular clique
        show_debug_message("Simulando clique no quartel...");
        
        // Verificar se o quartel tem evento Mouse_53
        if (event_exists(ev_mouse, ev_mouse_left)) {
            show_debug_message("‚úÖ Evento Mouse_53 existe no quartel");
        } else {
            show_debug_message("‚ùå Evento Mouse_53 N√ÉO existe no quartel");
        }
        
    } else {
        show_debug_message("‚ùå Nenhum quartel encontrado na posi√ß√£o do mouse");
    }
}

/// @description Diagn√≥stico avan√ßado de problemas espec√≠ficos
function scr_diagnostico_problemas_especificos() {
    show_debug_message("=== DIAGN√ìSTICO DE PROBLEMAS ESPEC√çFICOS ===");
    
    // === PROBLEMA 1: MENU VAZIO ===
    show_debug_message("=== TESTE: MENU VAZIO ===");
    
    var _quartel = instance_position(mouse_x, mouse_y, obj_quartel_marinha);
    if (_quartel != noone) {
        if (variable_instance_exists(_quartel, "unidades_disponiveis")) {
            var _unidades_count = ds_list_size(_quartel.unidades_disponiveis);
            show_debug_message("Unidades dispon√≠veis: " + string(_unidades_count));
            
            if (_unidades_count == 0) {
                show_debug_message("‚ùå PROBLEMA 1: Menu vazio - nenhuma unidade configurada");
                show_debug_message("   Solu√ß√£o: Verificar Create event do quartel");
            } else {
                show_debug_message("‚úÖ Unidades configuradas corretamente");
            }
        } else {
            show_debug_message("‚ùå PROBLEMA 1: Menu vazio - lista de unidades n√£o existe");
            show_debug_message("   Solu√ß√£o: Criar unidades_disponiveis no Create event");
        }
    }
    
    // === PROBLEMA 2: BOT√ïES N√ÉO FUNCIONAM ===
    show_debug_message("=== TESTE: BOT√ïES N√ÉO FUNCIONAM ===");
    
    if (object_exists(obj_menu_recrutamento_marinha)) {
        // Verificar se tem evento Mouse_56
        show_debug_message("‚úÖ Objeto do menu existe");
        show_debug_message("   Verificar manualmente se evento Mouse_56 est√° implementado");
    } else {
        show_debug_message("‚ùå PROBLEMA 2: Objeto do menu n√£o existe");
    }
    
    // === PROBLEMA 3: RECURSOS N√ÉO DEDUZEM ===
    show_debug_message("=== TESTE: RECURSOS N√ÉO DEDUZEM ===");
    
    if (variable_global_exists("nacao_recursos")) {
        show_debug_message("‚úÖ Sistema de recursos existe");
        show_debug_message("   Dinheiro atual: $" + string(global.nacao_recursos[? "Dinheiro"]));
    } else {
        show_debug_message("‚ùå PROBLEMA 3: Sistema de recursos n√£o existe");
        show_debug_message("   Solu√ß√£o: Inicializar global.nacao_recursos");
        
        // Tentar inicializar automaticamente
        global.nacao_recursos = ds_map_create();
        global.nacao_recursos[? "Dinheiro"] = 10000;
        show_debug_message("‚úÖ Sistema de recursos inicializado automaticamente");
    }
    
    // === PROBLEMA 4: UNIDADES N√ÉO APARECEM ===
    show_debug_message("=== TESTE: UNIDADES N√ÉO APARECEM ===");
    
    if (object_exists(obj_lancha_patrulha)) {
        show_debug_message("‚úÖ Objeto obj_lancha_patrulha existe");
    } else {
        show_debug_message("‚ùå PROBLEMA 4: Objeto obj_lancha_patrulha n√£o existe");
        show_debug_message("   Solu√ß√£o: Criar objeto da unidade naval");
    }
    
    // === PROBLEMA 5: MENU SEM VISUAL ===
    show_debug_message("=== TESTE: MENU SEM VISUAL ===");
    
    var _test_menu = instance_create_layer(0, 0, "Instances", obj_menu_recrutamento_marinha);
    if (instance_exists(_test_menu)) {
        show_debug_message("‚úÖ Menu pode ser criado");
        show_debug_message("   Verificar manualmente se evento Draw est√° implementado");
        instance_destroy(_test_menu);
    } else {
        show_debug_message("‚ùå PROBLEMA 5: Menu n√£o pode ser criado");
    }
    
    // === PROBLEMA 6: MENU TRAVADO ===
    show_debug_message("=== TESTE: MENU TRAVADO ===");
    show_debug_message("   Verificar manualmente se bot√£o fechar funciona");
    
    // === PROBLEMA 7: MENU FORA DA TELA ===
    show_debug_message("=== TESTE: MENU FORA DA TELA ===");
    
    var _test_menu2 = instance_create_layer(0, 0, "Instances", obj_menu_recrutamento_marinha);
    if (instance_exists(_test_menu2)) {
        show_debug_message("Menu criado em posi√ß√£o: (" + string(_test_menu2.x) + ", " + string(_test_menu2.y) + ")");
        
        if (_test_menu2.x == 0 && _test_menu2.y == 0) {
            show_debug_message("‚ö†Ô∏è PROBLEMA 7: Menu criado em (0,0) - pode estar fora da tela");
            show_debug_message("   Solu√ß√£o: Ajustar posi√ß√£o do menu");
        } else {
            show_debug_message("‚úÖ Posi√ß√£o do menu parece correta");
        }
        
        instance_destroy(_test_menu2);
    }
    
    // === PROBLEMA 8: CONFLITO COM OUTROS QUART√âIS ===
    show_debug_message("=== TESTE: CONFLITO COM OUTROS QUART√âIS ===");
    
    var _quartel_terrestre_count = instance_number(obj_quartel);
    var _quartel_naval_count = instance_number(obj_quartel_marinha);
    
    show_debug_message("Quart√©is terrestres: " + string(_quartel_terrestre_count));
    show_debug_message("Quart√©is navais: " + string(_quartel_naval_count));
    
    if (_quartel_terrestre_count > 0 && _quartel_naval_count > 0) {
        show_debug_message("‚ö†Ô∏è Poss√≠vel conflito: ambos os tipos de quartel existem");
        show_debug_message("   Verificar se sistema de sele√ß√£o est√° funcionando");
    }
    
    // === PROBLEMA 9: MENU SEM COR ===
    show_debug_message("=== TESTE: MENU SEM COR ===");
    show_debug_message("   Verificar manualmente se Draw event tem cores definidas");
    
    // === PROBLEMA 10: INFORMA√á√ïES ERRADAS ===
    show_debug_message("=== TESTE: INFORMA√á√ïES ERRADAS ===");
    
    var _test_menu3 = instance_create_layer(0, 0, "Instances", obj_menu_recrutamento_marinha);
    if (instance_exists(_test_menu3)) {
        if (variable_instance_exists(_test_menu3, "meu_quartel_id")) {
            show_debug_message("‚úÖ Vari√°vel meu_quartel_id existe");
            show_debug_message("   Valor: " + string(_test_menu3.meu_quartel_id));
        } else {
            show_debug_message("‚ùå PROBLEMA 10: Vari√°vel meu_quartel_id n√£o existe");
        }
        instance_destroy(_test_menu3);
    }
    
    show_debug_message("=== DIAGN√ìSTICO ESPEC√çFICO CONCLU√çDO ===");
}

/// @description Corre√ß√£o autom√°tica de problemas comuns
function scr_corrigir_problemas_automaticamente() {
    show_debug_message("=== CORRE√á√ÉO AUTOM√ÅTICA DE PROBLEMAS ===");
    
    // === CORRE√á√ÉO 1: INICIALIZAR SISTEMA DE RECURSOS ===
    if (!variable_global_exists("nacao_recursos")) {
        global.nacao_recursos = ds_map_create();
        global.nacao_recursos[? "Dinheiro"] = 10000;
        global.nacao_recursos[? "Min√©rio"] = 5000;
        global.nacao_recursos[? "Petr√≥leo"] = 3000;
        show_debug_message("‚úÖ Sistema de recursos inicializado");
    }
    
    // === CORRE√á√ÉO 2: CRIAR LAYER SE N√ÉO EXISTIR ===
    if (!layer_exists("Instances")) {
        var _layer_id = layer_create(0, "Instances");
        if (_layer_id != -1) {
            show_debug_message("‚úÖ Layer 'Instances' criada");
        }
    }
    
    // === CORRE√á√ÉO 3: VERIFICAR QUART√âIS ===
    with (obj_quartel_marinha) {
        if (!variable_instance_exists(id, "unidades_disponiveis")) {
            unidades_disponiveis = ds_list_create();
            
            // Adicionar unidades b√°sicas
            var _lancha = {
                nome: "Lancha Patrulha",
                objeto: obj_lancha_patrulha,
                custo_dinheiro: 300,
                custo_populacao: 2,
                tempo_treino: 300
            };
            ds_list_add(unidades_disponiveis, _lancha);
            
            show_debug_message("‚úÖ Lista de unidades criada para quartel " + string(id));
        }
    }
    
    show_debug_message("=== CORRE√á√ïES APLICADAS ===");
    show_debug_message("üí° Agora teste o quartel novamente!");
}
