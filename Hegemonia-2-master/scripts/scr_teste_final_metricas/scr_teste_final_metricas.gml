/// @description Teste final com m√©tricas atuais do sistema
/// @function scr_teste_final_metricas

show_debug_message("=== TESTE FINAL: M√âTRICAS ATUAIS DO SISTEMA ===");

// 1. M√âTRICAS GERAIS
show_debug_message("üìä M√âTRICAS GERAIS:");

var total_instancias = 0;
var tipos_objetos = ds_map_create();

// Contar inst√¢ncias por tipo
with (all) {
    total_instancias++;
    var tipo = object_get_name(object_index);
    if (ds_map_exists(tipos_objetos, tipo)) {
        ds_map_set(tipos_objetos, tipo, ds_map_find_value(tipos_objetos, tipo) + 1);
    } else {
        ds_map_set(tipos_objetos, tipo, 1);
    }
}

show_debug_message("   - Total de inst√¢ncias: " + string(total_instancias));

// Mostrar contagem por tipo
var keys = ds_map_keys_to_array(tipos_objetos);
for (var i = 0; i < array_length(keys); i++) {
    var tipo = keys[i];
    var count = ds_map_find_value(tipos_objetos, tipo);
    show_debug_message("   - " + tipo + ": " + string(count));
}

// Limpar mapa tempor√°rio
ds_map_destroy(tipos_objetos);

// 2. VERIFICA√á√ÉO DE SISTEMAS CR√çTICOS
show_debug_message("üîç VERIFICA√á√ÉO DE SISTEMAS CR√çTICOS:");

// Sistema de produ√ß√£o naval
var controlador_producao = instance_first(obj_controlador_producao_naval);
var quartel_marinha = instance_first(obj_quartel_marinha);
var navios = instance_number(obj_lancha_patrulha);

show_debug_message("   - Controlador produ√ß√£o: " + (controlador_producao != noone ? "‚úÖ ATIVO" : "‚ùå INATIVO"));
show_debug_message("   - Quartel marinha: " + (quartel_marinha != noone ? "‚úÖ ATIVO" : "‚ùå INATIVO"));
show_debug_message("   - Navios existentes: " + string(navios));

// Sistema de sele√ß√£o
var infantaria = instance_first(obj_infantaria);
var tanque = instance_first(obj_tanque);
var soldado_aa = instance_first(obj_soldado_antiaereo);

show_debug_message("   - Infantaria: " + (infantaria != noone ? "‚úÖ ATIVA" : "‚ùå INATIVA"));
show_debug_message("   - Tanque: " + (tanque != noone ? "‚úÖ ATIVO" : "‚ùå INATIVO"));
show_debug_message("   - Soldado AA: " + (soldado_aa != noone ? "‚úÖ ATIVO" : "‚ùå INATIVO"));

// Sistema de comandos
var controlador_unidades = instance_first(obj_controlador_unidades);
show_debug_message("   - Controlador unidades: " + (controlador_unidades != noone ? "‚úÖ ATIVO" : "‚ùå INATIVO"));

// 3. TESTE DE PRODU√á√ÉO NAVAL
show_debug_message("üß™ TESTE DE PRODU√á√ÉO NAVAL:");

if (controlador_producao != noone && quartel_marinha != noone) {
    // Configurar produ√ß√£o
    quartel_marinha.produzindo = false;
    quartel_marinha.alarm[0] = 0;
    quartel_marinha.timer_producao_step = 0;
    ds_queue_clear(quartel_marinha.fila_producao);
    
    var unidade_data = quartel_marinha.unidades_disponiveis[| 0];
    ds_queue_enqueue(quartel_marinha.fila_producao, unidade_data);
    quartel_marinha.produzindo = true;
    quartel_marinha.alarm[0] = unidade_data.tempo_treino;
    quartel_marinha.timer_producao_step = 0;
    
    show_debug_message("   - Produ√ß√£o configurada: " + unidade_data.nome);
    
    // Simular produ√ß√£o acelerada
    var navios_antes = instance_number(obj_lancha_patrulha);
    var frames_simulados = 0;
    var max_frames = unidade_data.tempo_treino + 5;
    
    while (frames_simulados < max_frames && quartel_marinha.produzindo) {
        frames_simulados++;
        
        if (quartel_marinha.produzindo && !ds_queue_empty(quartel_marinha.fila_producao)) {
            quartel_marinha.timer_producao_step++;
            
            var _unidade_data = ds_queue_head(quartel_marinha.fila_producao);
            var _tempo_necessario = _unidade_data.tempo_treino;
            
            if (quartel_marinha.timer_producao_step >= _tempo_necessario || quartel_marinha.alarm[0] <= 0) {
                // Criar navio
                var _spawn_x = quartel_marinha.x + 80;
                var _spawn_y = quartel_marinha.y + 80;
                
                var _unidade_criada = instance_create_layer(_spawn_x, _spawn_y, "rm_mapa_principal", obj_lancha_patrulha);
                
                if (instance_exists(_unidade_criada)) {
                    quartel_marinha.unidades_produzidas++;
                    controlador_producao.producoes_processadas++;
                    
                    show_debug_message("   ‚úÖ Navio criado: " + string(_unidade_criada));
                    _unidade_criada.nacao_proprietaria = quartel_marinha.nacao_proprietaria;
                    ds_queue_dequeue(quartel_marinha.fila_producao);
                    quartel_marinha.produzindo = false;
                    quartel_marinha.timer_producao_step = 0;
                    
                    break;
                }
            }
        }
    }
    
    var navios_depois = instance_number(obj_lancha_patrulha);
    var producao_funcionou = (navios_depois > navios_antes);
    show_debug_message("   - Navios antes: " + string(navios_antes));
    show_debug_message("   - Navios depois: " + string(navios_depois));
    show_debug_message("   - Produ√ß√£o funcionou: " + (producao_funcionou ? "‚úÖ SIM" : "‚ùå N√ÉO"));
    
} else {
    show_debug_message("   - ‚ùå Sistema de produ√ß√£o n√£o dispon√≠vel");
    var producao_funcionou = false;
}

// 4. TESTE DE SELE√á√ÉO
show_debug_message("üß™ TESTE DE SELE√á√ÉO:");

var selecao_funcionou = true;

// Testar sele√ß√£o de navios
with (obj_lancha_patrulha) {
    selecionado = true;
    var tem_selecionado = variable_instance_exists(id, "selecionado");
    var tem_alcance_tiro = variable_instance_exists(id, "alcance_tiro");
    var tem_raio_selecao = variable_instance_exists(id, "raio_selecao");
    
    if (!tem_selecionado || !tem_alcance_tiro || !tem_raio_selecao) {
        selecao_funcionou = false;
    }
}

show_debug_message("   - Sele√ß√£o de navios: " + (selecao_funcionou ? "‚úÖ FUNCIONA" : "‚ùå FALHA"));

// 5. TESTE DE COMANDOS T√ÅTICOS
show_debug_message("üß™ TESTE DE COMANDOS T√ÅTICOS:");

var comandos_funcionaram = true;

if (infantaria != noone) {
    var tem_comando_atual = variable_instance_exists(infantaria, "comando_atual");
    var tem_estado = variable_instance_exists(infantaria, "estado");
    var tem_alvo = variable_instance_exists(infantaria, "alvo");
    
    if (tem_comando_atual && tem_estado && tem_alvo) {
        infantaria.comando_atual = "ATACAR";
        infantaria.estado = "atacando";
        infantaria.alvo = instance_first(obj_inimigo);
        
        var comando_aplicado = (infantaria.comando_atual == "ATACAR");
        show_debug_message("   - Comando ATACAR: " + (comando_aplicado ? "‚úÖ FUNCIONA" : "‚ùå FALHA"));
    } else {
        comandos_funcionaram = false;
        show_debug_message("   - ‚ùå Vari√°veis de comando n√£o existem");
    }
} else {
    comandos_funcionaram = false;
    show_debug_message("   - ‚ùå Infantaria n√£o encontrada");
}

// 6. VERIFICA√á√ÉO DE MEM√ìRIA
show_debug_message("üîç VERIFICA√á√ÉO DE MEM√ìRIA:");

var filas_vazias = 0;
var listas_vazias = 0;

with (obj_quartel_marinha) {
    if (variable_instance_exists(id, "fila_producao") && ds_queue_empty(fila_producao)) {
        filas_vazias++;
    }
}

with (obj_infantaria) {
    if (variable_instance_exists(id, "patrulha") && ds_list_size(patrulha) == 0) {
        listas_vazias++;
    }
}

show_debug_message("   - Filas vazias: " + string(filas_vazias));
show_debug_message("   - Listas vazias: " + string(listas_vazias));
show_debug_message("   - Total inst√¢ncias: " + string(total_instancias));

var memoria_ok = (total_instancias < 1000);
show_debug_message("   - Mem√≥ria OK: " + (memoria_ok ? "‚úÖ SIM" : "‚ùå N√ÉO"));

// 7. RESULTADO FINAL
show_debug_message("üéØ RESULTADO FINAL:");

var sistemas_funcionando = 0;
var total_sistemas = 4;

if (producao_funcionou) sistemas_funcionando++;
if (selecao_funcionou) sistemas_funcionando++;
if (comandos_funcionaram) sistemas_funcionando++;
if (memoria_ok) sistemas_funcionando++;

show_debug_message("   - Sistema Produ√ß√£o Naval: " + (producao_funcionou ? "‚úÖ FUNCIONAL" : "‚ùå N√ÉO FUNCIONAL"));
show_debug_message("   - Sistema Sele√ß√£o: " + (selecao_funcionou ? "‚úÖ FUNCIONAL" : "‚ùå N√ÉO FUNCIONAL"));
show_debug_message("   - Sistema Comandos: " + (comandos_funcionaram ? "‚úÖ FUNCIONAL" : "‚ùå N√ÉO FUNCIONAL"));
show_debug_message("   - Sistema Mem√≥ria: " + (memoria_ok ? "‚úÖ FUNCIONAL" : "‚ùå N√ÉO FUNCIONAL"));

show_debug_message("üìä RESUMO FINAL:");
show_debug_message("   - Sistemas funcionando: " + string(sistemas_funcionando) + "/" + string(total_sistemas));
show_debug_message("   - Taxa de sucesso: " + string(round((sistemas_funcionando / total_sistemas) * 100)) + "%");
show_debug_message("   - Total inst√¢ncias: " + string(total_instancias));
show_debug_message("   - Navios criados: " + string(instance_number(obj_lancha_patrulha)));

if (sistemas_funcionando == total_sistemas) {
    show_debug_message("üéâ SUCESSO TOTAL: TODOS OS SISTEMAS FUNCIONANDO!");
    show_debug_message("‚úÖ Problema cr√≠tico do Step Event RESOLVIDO!");
    show_debug_message("‚úÖ Sistema est√° PRONTO para produ√ß√£o!");
} else if (sistemas_funcionando >= total_sistemas * 0.75) {
    show_debug_message("‚ö†Ô∏è SUCESSO PARCIAL: Maioria dos sistemas funcionando");
    show_debug_message("üîß Pequenos ajustes necess√°rios");
} else {
    show_debug_message("‚ùå FALHA: Muitos sistemas n√£o funcionando");
    show_debug_message("üîç Verificar logs acima para identificar problemas");
}

show_debug_message("=== TESTE FINAL CONCLU√çDO ===");
