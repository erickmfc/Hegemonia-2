// ===============================================
// HEGEMONIA GLOBAL - INICIALIZADOR CORRIGIDO
// Sistema Unificado com Corre√ß√µes de Erros
// ===============================================

/// @description Inicializar sistema unificado corrigido
function inicializar_sistema_unificado_corrigido() {
    show_debug_message("üöÄ Iniciando sistema unificado corrigido...");
    
    // 1. Inicializar recursos globais se n√£o existirem
    if (!variable_global_exists("dinheiro")) {
        global.dinheiro = 1000;
        show_debug_message("üí∞ Dinheiro inicializado: " + string(global.dinheiro));
    }
    
    if (!variable_global_exists("minerio")) {
        global.minerio = 500;
        show_debug_message("‚õèÔ∏è Min√©rio inicializado: " + string(global.minerio));
    }
    
    if (!variable_global_exists("populacao")) {
        global.populacao = 100;
        show_debug_message("üë• Popula√ß√£o inicializada: " + string(global.populacao));
    }
    
    if (!variable_global_exists("militares_totais")) {
        global.militares_totais = 0;
        show_debug_message("ü™ñ Militares totais inicializados: " + string(global.militares_totais));
    }
    
    // 2. Validar objetos existentes
    validar_objetos_sistema_unificado();
    
    // 3. Configurar quart√©is existentes
    configurar_quart√©is_sistema_unificado();
    
    show_debug_message("‚úÖ Sistema unificado corrigido inicializado!");
}

/// @description Validar objetos do sistema unificado
function validar_objetos_sistema_unificado() {
    show_debug_message("üîç Validando objetos do sistema unificado...");
    
    // Verificar objeto base
    if (!object_exists(obj_quartel_base)) {
        show_debug_message("‚ùå ERRO CR√çTICO: obj_quartel_base n√£o existe!");
        return false;
    }
    
    // Verificar quart√©is espec√≠ficos
    if (!object_exists(obj_quartel)) {
        show_debug_message("‚ùå ERRO: obj_quartel n√£o existe!");
        return false;
    }
    
    if (!object_exists(obj_quartel_marinha)) {
        show_debug_message("‚ùå ERRO: obj_quartel_marinha n√£o existe!");
        return false;
    }
    
    // Verificar objetos de unidades
    var _objetos_unidades = [obj_infantaria, obj_soldado_antiaereo, obj_tanque, obj_lancha_patrulha];
    var _objetos_validos = 0;
    
    for (var i = 0; i < array_length(_objetos_unidades); i++) {
        if (object_exists(_objetos_unidades[i])) {
            _objetos_validos++;
            show_debug_message("‚úÖ " + string(_objetos_unidades[i]) + " existe");
        } else {
            show_debug_message("‚ùå " + string(_objetos_unidades[i]) + " n√£o existe");
        }
    }
    
    show_debug_message("üìä Objetos de unidades v√°lidos: " + string(_objetos_validos) + "/" + string(array_length(_objetos_unidades)));
    
    return _objetos_validos > 0;
}

/// @description Configurar quart√©is do sistema unificado
function configurar_quart√©is_sistema_unificado() {
    show_debug_message("üîß Configurando quart√©is do sistema unificado...");
    
    var _quart√©is_configurados = 0;
    
    // Configurar quart√©is terrestres
    with (obj_quartel) {
        // Verificar se vari√°veis existem (devem existir por heran√ßa)
        if (!variable_instance_exists(id, "fila_producao")) {
            fila_producao = ds_queue_create();
            show_debug_message("‚ö†Ô∏è fila_producao criada para quartel " + string(id));
        }
        
        if (!variable_instance_exists(id, "unidades_disponiveis")) {
            unidades_disponiveis = ds_list_create();
            show_debug_message("‚ö†Ô∏è unidades_disponiveis criada para quartel " + string(id));
        }
        
        _quart√©is_configurados++;
        show_debug_message("‚úÖ Quartel terrestre ID " + string(id) + " configurado");
    }
    
    // Configurar quart√©is navais
    with (obj_quartel_marinha) {
        // Verificar se vari√°veis existem (devem existir por heran√ßa)
        if (!variable_instance_exists(id, "fila_producao")) {
            fila_producao = ds_queue_create();
            show_debug_message("‚ö†Ô∏è fila_producao criada para quartel naval " + string(id));
        }
        
        if (!variable_instance_exists(id, "unidades_disponiveis")) {
            unidades_disponiveis = ds_list_create();
            show_debug_message("‚ö†Ô∏è unidades_disponiveis criada para quartel naval " + string(id));
        }
        
        _quart√©is_configurados++;
        show_debug_message("‚úÖ Quartel naval ID " + string(id) + " configurado");
    }
    
    show_debug_message("üìä Quart√©is configurados: " + string(_quart√©is_configurados));
}

/// @description Testar sistema unificado corrigido
function testar_sistema_unificado_corrigido() {
    show_debug_message("üß™ === TESTE DO SISTEMA UNIFICADO CORRIGIDO ===");
    
    // 1. Verificar recursos
    var _recursos = scr_obter_recursos_disponiveis();
    show_debug_message("üí∞ Recursos dispon√≠veis:");
    show_debug_message("   Dinheiro: " + string(_recursos.dinheiro));
    show_debug_message("   Min√©rio: " + string(_recursos.minerio));
    show_debug_message("   Popula√ß√£o: " + string(_recursos.populacao));
    
    // 2. Verificar quart√©is
    var _quart√©is_terrestres = 0;
    var _quart√©is_navais = 0;
    
    with (obj_quartel) {
        _quart√©is_terrestres++;
        show_debug_message("üèõÔ∏è Quartel terrestre ID " + string(id) + ":");
        show_debug_message("   Unidades dispon√≠veis: " + string(ds_list_size(unidades_disponiveis)));
        show_debug_message("   Fila de produ√ß√£o: " + string(ds_queue_size(fila_producao)));
    }
    
    with (obj_quartel_marinha) {
        _quart√©is_navais++;
        show_debug_message("üö¢ Quartel naval ID " + string(id) + ":");
        show_debug_message("   Unidades dispon√≠veis: " + string(ds_list_size(unidades_disponiveis)));
        show_debug_message("   Fila de produ√ß√£o: " + string(ds_queue_size(fila_producao)));
    }
    
    show_debug_message("üìä Total de quart√©is: " + string(_quart√©is_terrestres + _quart√©is_navais));
    show_debug_message("===============================================");
    
    return true;
}
