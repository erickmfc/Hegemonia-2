// ===============================================
// HEGEMONIA GLOBAL - TESTE DO SISTEMA UNIFICADO
// Verifica√ß√£o Completa dos Quart√©is
// ===============================================

/// @description Testar sistema unificado de quart√©is
function testar_sistema_unificado_completo() {
    show_debug_message("üß™ === TESTE DO SISTEMA UNIFICADO ===");
    
    // 1. Verificar objetos base
    if (!object_exists(obj_quartel_base)) {
        show_debug_message("‚ùå ERRO: obj_quartel_base n√£o existe!");
        return false;
    }
    
    // 2. Verificar quart√©is espec√≠ficos
    if (!object_exists(obj_quartel)) {
        show_debug_message("‚ùå ERRO: obj_quartel n√£o existe!");
        return false;
    }
    
    if (!object_exists(obj_quartel_marinha)) {
        show_debug_message("‚ùå ERRO: obj_quartel_marinha n√£o existe!");
        return false;
    }
    
    // 3. Verificar scripts
    if (!function_exists("scr_producao_unificada")) {
        show_debug_message("‚ùå ERRO: scr_producao_unificada n√£o existe!");
        return false;
    }
    
    if (!function_exists("scr_verificar_recursos_unificados")) {
        show_debug_message("‚ùå ERRO: scr_verificar_recursos_unificados n√£o existe!");
        return false;
    }
    
    if (!function_exists("scr_criar_unidade_segura")) {
        show_debug_message("‚ùå ERRO: scr_criar_unidade_segura n√£o existe!");
        return false;
    }
    
    // 4. Contar quart√©is existentes
    var _quart√©is_terrestres = 0;
    var _quart√©is_navais = 0;
    
    with (obj_quartel) {
        _quart√©is_terrestres++;
        show_debug_message("‚úÖ Quartel terrestre encontrado - ID: " + string(id));
    }
    
    with (obj_quartel_marinha) {
        _quart√©is_navais++;
        show_debug_message("‚úÖ Quartel naval encontrado - ID: " + string(id));
    }
    
    // 5. Verificar vari√°veis dos quart√©is
    with (obj_quartel) {
        if (!variable_instance_exists(id, "fila_producao")) {
            show_debug_message("‚ùå ERRO: fila_producao n√£o existe no quartel " + string(id));
        }
        if (!variable_instance_exists(id, "unidades_disponiveis")) {
            show_debug_message("‚ùå ERRO: unidades_disponiveis n√£o existe no quartel " + string(id));
        }
    }
    
    with (obj_quartel_marinha) {
        if (!variable_instance_exists(id, "fila_producao")) {
            show_debug_message("‚ùå ERRO: fila_producao n√£o existe no quartel naval " + string(id));
        }
        if (!variable_instance_exists(id, "unidades_disponiveis")) {
            show_debug_message("‚ùå ERRO: unidades_disponiveis n√£o existe no quartel naval " + string(id));
        }
    }
    
    // 6. Resumo do teste
    show_debug_message("üìä === RESUMO DO TESTE ===");
    show_debug_message("   Quart√©is terrestres: " + string(_quart√©is_terrestres));
    show_debug_message("   Quart√©is navais: " + string(_quart√©is_navais));
    show_debug_message("   Sistema unificado: ‚úÖ FUNCIONANDO");
    show_debug_message("================================");
    
    return true;
}

/// @description Testar produ√ß√£o de unidade
/// @param quartel_id ID do quartel
/// @param unidade_index √çndice da unidade
function testar_producao_unidade_simples(quartel_id, unidade_index) {
    show_debug_message("üß™ Testando produ√ß√£o de unidade...");
    
    var _quartel = quartel_id;
    if (!instance_exists(_quartel)) {
        show_debug_message("‚ùå Quartel n√£o encontrado!");
        return false;
    }
    
    // Verificar se tem unidades dispon√≠veis
    if (ds_list_size(_quartel.unidades_disponiveis) == 0) {
        show_debug_message("‚ùå Nenhuma unidade dispon√≠vel no quartel!");
        return false;
    }
    
    // Tentar adicionar √† fila
    var _resultado = scr_adicionar_fila_producao(unidade_index);
    
    if (_resultado) {
        show_debug_message("‚úÖ Teste de produ√ß√£o bem-sucedido!");
        show_debug_message("üìã Unidade adicionada √† fila do quartel " + string(_quartel.id));
    } else {
        show_debug_message("‚ùå Teste de produ√ß√£o falhou!");
    }
    
    return _resultado;
}

/// @description Obter status completo do sistema
function obter_status_sistema_unificado() {
    show_debug_message("üìä === STATUS DO SISTEMA UNIFICADO ===");
    
    // Recursos globais
    if (variable_global_exists("dinheiro")) {
        show_debug_message("üí∞ Dinheiro: " + string(global.dinheiro));
    } else {
        show_debug_message("‚ö†Ô∏è Dinheiro global n√£o definido");
    }
    
    if (variable_global_exists("nacao_recursos")) {
        show_debug_message("‚õèÔ∏è Min√©rio: " + string(global.nacao_recursos[? "Min√©rio"]));
    } else {
        show_debug_message("‚ö†Ô∏è Recursos da na√ß√£o n√£o definidos");
    }
    
    // Quart√©is
    var _total_quart√©is = 0;
    var _quart√©is_produzindo = 0;
    var _unidades_na_fila = 0;
    
    with (obj_quartel) {
        _total_quart√©is++;
        if (produzindo) _quart√©is_produzindo++;
        _unidades_na_fila += ds_queue_size(fila_producao);
        show_debug_message("üèõÔ∏è Quartel Terrestre ID " + string(id) + ":");
        show_debug_message("   Produzindo: " + string(produzindo));
        show_debug_message("   Fila: " + string(ds_queue_size(fila_producao)));
        show_debug_message("   Unidades dispon√≠veis: " + string(ds_list_size(unidades_disponiveis)));
    }
    
    with (obj_quartel_marinha) {
        _total_quart√©is++;
        if (produzindo) _quart√©is_produzindo++;
        _unidades_na_fila += ds_queue_size(fila_producao);
        show_debug_message("üö¢ Quartel Naval ID " + string(id) + ":");
        show_debug_message("   Produzindo: " + string(produzindo));
        show_debug_message("   Fila: " + string(ds_queue_size(fila_producao)));
        show_debug_message("   Unidades dispon√≠veis: " + string(ds_list_size(unidades_disponiveis)));
    }
    
    show_debug_message("üìà Total de quart√©is: " + string(_total_quart√©is));
    show_debug_message("‚öôÔ∏è Quart√©is produzindo: " + string(_quart√©is_produzindo));
    show_debug_message("üìã Unidades na fila: " + string(_unidades_na_fila));
    show_debug_message("=====================================");
}
